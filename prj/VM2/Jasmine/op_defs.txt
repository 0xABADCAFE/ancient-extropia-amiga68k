nop.none     none none none   "No Operation"
end.none     none none none   "End of Program"

print.opt    any none none    "System Console Output"
read.opt     dest opt none    "System Console In"

break.none   none none none   "Reserved"
dump.none    none none none   "System VM Internals Debug Output"
ver.none     none none none   "Display VM Version"
new.type     regd any none    "Allocate Memory"
del.type     regd none none   "Free Memory"

bra.none     off none none    "Unconditional Branch"
lea.none     regd any none    "Load Effective Address (&)"
bneq.type    off any any      "Branch Not Equal"
bls.type     off any any      "Branch Less Than"
blseq.type   off any any      "Branch Less Than or Equal"
beq.type     off any any      "Branch Equal"
bgreq.type   off any any      "Branch Greater Than or Equal"
bgr.type     off any any      "Branch Greater Than"

call.none    dest none none   "Call Subroutine"
ret.none     none none none   "Return from Subroutine"

push.size    any none none    "Push to Data Stack"
pop.size     dest none none   "Pop from Data Stack"
save.none    regd opt none    "Save Register(s)"
restore.none regd opt none    "Restore Register(s)"

move.size    dest any none    "Move (Copy) Data"
endian.size  dest any none    "Endian Swap"
swap.size    dest any none    "Swap Data"

add.type     dest any any     "Addition"
sub.type     dest any any     "Substraction"
mul.type     dest any any     "Multiplication"
div.type     dest any any     "Division"
mod.type     dest any any     "Modulus (Remainder)"
mulu.int     dest any any     "Unsigned Multiplication"
divu.int     dest any any     "Unsigned Division"
modu.int     dest any any     "Unsigned Modulus (Remainder)"
neg.type     dest any none    "Negate"

shl.int      dest any any     "Arithmetic Shift Left"
shr.int      dest any any     "Arithmetic Shift Right"
shlu.size    dest any any     "Logical Shift Left"
shru.size    dest any any     "Logical Shift Right"
and.size     dest any any     "Logical And"
or.size      dest any any     "Logical Or"
xor.size     dest any any     "Logical Exclusive Or"
not.size     dest any none    "Logical Not"

toi8.type    dest any none    "Cast to 8-bit Signed Integer"
toi16.type   dest any none    "Cast to 16-bit Signed Integer"
toi32.type   dest any none    "Cast to 32-bit Signed Integer"
toi64.type   dest any none    "Cast to 64-bit Signed Integer"
tof32.type   dest any none    "Cast to 32-bit Float"
tof64.type   dest any none    "Cast to 64-bit Float"
