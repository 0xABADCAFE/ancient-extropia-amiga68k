//*****************************************************************//
//** Description:   eXtropia XSF Codec Virtual Machine           **//
//** First Started: 2002-03-08                                   **//
//** Last Updated:                                               **//
//** Author         Karl Churchill                               **//
//** Copyright:     (C)1998-2002, eXtropia Studios               **//
//**                Serkan YAZICI, Karl Churchill                **//
//**                All Rights Reserved.                         **//
//*****************************************************************//

#ifndef _XSFVIRTUALMACHINE2_HPP
#error You must not #include VMFuncs manually
#endif

#define CMDARGS register __a2 VMCORE* This, register __a3 VMCORE::EAFUNC* pf
#define EAFARGS register __a2 VMCORE* This, register __d7 size_t s
#define OPINIT()  ruint8* p = (uint8*)This->instPtr;
#define OPDONE()  This->instPtr++
#define OP1(t) *((t*)pf[p[1]](This,sizeof(t)))
#define OP2(t) *((t*)pf[p[2]](This,sizeof(t)))
#define OP3(t) *((t*)pf[p[3]](This,sizeof(t)))
#define POP1(t) ((t*)pf[p[1]](This,sizeof(t)))
#define POP2(t) ((t*)pf[p[2]](This,sizeof(t)))
#define POP3(t) ((t*)pf[p[3]](This,sizeof(t)))

static void* fR0(EAFARGS);
static void* fR1(EAFARGS);
static void* fR2(EAFARGS);
static void* fR3(EAFARGS);
static void* fR4(EAFARGS);
static void* fR5(EAFARGS);
static void* fR6(EAFARGS);
static void* fR7(EAFARGS);
static void* fR8(EAFARGS);
static void* fR9(EAFARGS);
static void* fR10(EAFARGS);
static void* fR11(EAFARGS);
static void* fR12(EAFARGS);
static void* fR13(EAFARGS);
static void* fR14(EAFARGS);
static void* fR15(EAFARGS);
static void* fR16(EAFARGS);
static void* fR17(EAFARGS);
static void* fR18(EAFARGS);
static void* fR19(EAFARGS);
static void* fR20(EAFARGS);
static void* fR21(EAFARGS);
static void* fR22(EAFARGS);
static void* fR23(EAFARGS);
static void* fR24(EAFARGS);
static void* fR25(EAFARGS);
static void* fR26(EAFARGS);
static void* fR27(EAFARGS);
static void* fR28(EAFARGS);
static void* fR29(EAFARGS);
static void* fR30(EAFARGS);
static void* fR31(EAFARGS);
static void* fIR0(EAFARGS);
static void* fIR1(EAFARGS);
static void* fIR2(EAFARGS);
static void* fIR3(EAFARGS);
static void* fIR4(EAFARGS);
static void* fIR5(EAFARGS);
static void* fIR6(EAFARGS);
static void* fIR7(EAFARGS);
static void* fIR8(EAFARGS);
static void* fIR9(EAFARGS);
static void* fIR10(EAFARGS);
static void* fIR11(EAFARGS);
static void* fIR12(EAFARGS);
static void* fIR13(EAFARGS);
static void* fIR14(EAFARGS);
static void* fIR15(EAFARGS);
static void* fIR16(EAFARGS);
static void* fIR17(EAFARGS);
static void* fIR18(EAFARGS);
static void* fIR19(EAFARGS);
static void* fIR20(EAFARGS);
static void* fIR21(EAFARGS);
static void* fIR22(EAFARGS);
static void* fIR23(EAFARGS);
static void* fIR24(EAFARGS);
static void* fIR25(EAFARGS);
static void* fIR26(EAFARGS);
static void* fIR27(EAFARGS);
static void* fIR28(EAFARGS);
static void* fIR29(EAFARGS);
static void* fIR30(EAFARGS);
static void* fIR31(EAFARGS);
static void* fLIR0(EAFARGS);
static void* fLIR1(EAFARGS);
static void* fLIR2(EAFARGS);
static void* fLIR3(EAFARGS);
static void* fLIR4(EAFARGS);
static void* fLIR5(EAFARGS);
static void* fLIR6(EAFARGS);
static void* fLIR7(EAFARGS);
static void* fLIR8(EAFARGS);
static void* fLIR9(EAFARGS);
static void* fLIR10(EAFARGS);
static void* fLIR11(EAFARGS);
static void* fLIR12(EAFARGS);
static void* fLIR13(EAFARGS);
static void* fLIR14(EAFARGS);
static void* fLIR15(EAFARGS);
static void* fLIR16(EAFARGS);
static void* fLIR17(EAFARGS);
static void* fLIR18(EAFARGS);
static void* fLIR19(EAFARGS);
static void* fLIR20(EAFARGS);
static void* fLIR21(EAFARGS);
static void* fLIR22(EAFARGS);
static void* fLIR23(EAFARGS);
static void* fLIR24(EAFARGS);
static void* fLIR25(EAFARGS);
static void* fLIR26(EAFARGS);
static void* fLIR27(EAFARGS);
static void* fLIR28(EAFARGS);
static void* fLIR29(EAFARGS);
static void* fLIR30(EAFARGS);
static void* fLIR31(EAFARGS);
static void* fLUIR0(EAFARGS);
static void* fLUIR1(EAFARGS);
static void* fLUIR2(EAFARGS);
static void* fLUIR3(EAFARGS);
static void* fLUIR4(EAFARGS);
static void* fLUIR5(EAFARGS);
static void* fLUIR6(EAFARGS);
static void* fLUIR7(EAFARGS);
static void* fLUIR8(EAFARGS);
static void* fLUIR9(EAFARGS);
static void* fLUIR10(EAFARGS);
static void* fLUIR11(EAFARGS);
static void* fLUIR12(EAFARGS);
static void* fLUIR13(EAFARGS);
static void* fLUIR14(EAFARGS);
static void* fLUIR15(EAFARGS);
static void* fLUIR16(EAFARGS);
static void* fLUIR17(EAFARGS);
static void* fLUIR18(EAFARGS);
static void* fLUIR19(EAFARGS);
static void* fLUIR20(EAFARGS);
static void* fLUIR21(EAFARGS);
static void* fLUIR22(EAFARGS);
static void* fLUIR23(EAFARGS);
static void* fLUIR24(EAFARGS);
static void* fLUIR25(EAFARGS);
static void* fLUIR26(EAFARGS);
static void* fLUIR27(EAFARGS);
static void* fLUIR28(EAFARGS);
static void* fLUIR29(EAFARGS);
static void* fLUIR30(EAFARGS);
static void* fLUIR31(EAFARGS);
static void* fIRRO(EAFARGS);
static void* fIRROU(EAFARGS);
static void* fCLONE1ST(EAFARGS);
static void* fCLONE2ND(EAFARGS);
static void* fCTR(EAFARGS);
static void* fDS(EAFARGS);
static void* fCDS(EAFARGS);
static void* fLITERAL(EAFARGS);

static void fNOP(CMDARGS);
static void fBRK(CMDARGS);
static void fEXIT(CMDARGS);
static void fLEA(CMDARGS);

static void fBRA(CMDARGS);
static void fBNEQ_I8(CMDARGS);
static void fBNEQ_I16(CMDARGS);
static void fBNEQ_I32(CMDARGS);
static void fBNEQ_I64(CMDARGS);
static void fBNEQ_F32(CMDARGS);
static void fBNEQ_F64(CMDARGS);
static void fBLS_I8(CMDARGS);
static void fBLS_I16(CMDARGS);
static void fBLS_I32(CMDARGS);
static void fBLS_I64(CMDARGS);
static void fBLS_F32(CMDARGS);
static void fBLS_F64(CMDARGS);
static void fBLSEQ_I8(CMDARGS);
static void fBLSEQ_I16(CMDARGS);
static void fBLSEQ_I32(CMDARGS);
static void fBLSEQ_I64(CMDARGS);
static void fBLSEQ_F32(CMDARGS);
static void fBLSEQ_F64(CMDARGS);
static void fBEQ_I8(CMDARGS);
static void fBEQ_I16(CMDARGS);
static void fBEQ_I32(CMDARGS);
static void fBEQ_I64(CMDARGS);
static void fBEQ_F32(CMDARGS);
static void fBEQ_F64(CMDARGS);
static void fBGREQ_I8(CMDARGS);
static void fBGREQ_I16(CMDARGS);
static void fBGREQ_I32(CMDARGS);
static void fBGREQ_I64(CMDARGS);
static void fBGREQ_F32(CMDARGS);
static void fBGREQ_F64(CMDARGS);
static void fBGR_I8(CMDARGS);
static void fBGR_I16(CMDARGS);
static void fBGR_I32(CMDARGS);
static void fBGR_I64(CMDARGS);
static void fBGR_F32(CMDARGS);
static void fBGR_F64(CMDARGS);

static void fJSR(CMDARGS);
static void fRTS(CMDARGS);

static void fPUSH_X8(CMDARGS);
static void fPUSH_X16(CMDARGS);
static void fPUSH_X32(CMDARGS);
static void fPUSH_X64(CMDARGS);
static void fPOP_X8(CMDARGS);
static void fPOP_X16(CMDARGS);
static void fPOP_X32(CMDARGS);
static void fPOP_X64(CMDARGS);
static void fPUSHREGS(CMDARGS);
static void fPOPREGS(CMDARGS);
static void fCLR_X8(CMDARGS);
static void fCLR_X16(CMDARGS);
static void fCLR_X32(CMDARGS);
static void fCLR_X64(CMDARGS);
static void fMOVE_X8(CMDARGS);
static void fMOVE_X16(CMDARGS);
static void fMOVE_X32(CMDARGS);
static void fMOVE_X64(CMDARGS);

// Cast (wide)
static void fI8TOI16(CMDARGS);
static void fI8TOI32(CMDARGS);
static void fI8TOI64(CMDARGS);
static void fI8TOF32(CMDARGS);
static void fI8TOF64(CMDARGS);
static void fI16TOI32(CMDARGS);
static void fI16TOI64(CMDARGS);
static void fI16TOF32(CMDARGS);
static void fI16TOF64(CMDARGS);
static void fI32TOI64(CMDARGS);
static void fI32TOF32(CMDARGS);
static void fI32TOF64(CMDARGS);
static void fI64TOF32(CMDARGS);
static void fI64TOF64(CMDARGS);
static void fF32TOF64(CMDARGS);

// Cast (narrow)
static void fF64TOF32(CMDARGS);
static void fF64TOI64(CMDARGS);
static void fF64TOI32(CMDARGS);
static void fF64TOI16(CMDARGS);
static void fF64TOI8(CMDARGS);
static void fF32TOI64(CMDARGS);
static void fF32TOI32(CMDARGS);
static void fF32TOI16(CMDARGS);
static void fF32TOI8(CMDARGS);
static void fI64TOI32(CMDARGS);
static void fI64TOI16(CMDARGS);
static void fI64TOI8(CMDARGS);
static void fI32TOI16(CMDARGS);
static void fI32TOI8(CMDARGS);
static void fI16TOI8(CMDARGS);

static void fADD_I8(CMDARGS);
static void fADD_I16(CMDARGS);
static void fADD_I32(CMDARGS);
static void fADD_I64(CMDARGS);
static void fADD_F32(CMDARGS);
static void fADD_F64(CMDARGS);
static void fSUB_I8(CMDARGS);
static void fSUB_I16(CMDARGS);
static void fSUB_I32(CMDARGS);
static void fSUB_I64(CMDARGS);
static void fSUB_F32(CMDARGS);
static void fSUB_F64(CMDARGS);
static void fMUL_I8(CMDARGS);
static void fMUL_I16(CMDARGS);
static void fMUL_I32(CMDARGS);
static void fMUL_I64(CMDARGS);
static void fMUL_F32(CMDARGS);
static void fMUL_F64(CMDARGS);
static void fDIV_I8(CMDARGS);
static void fDIV_I16(CMDARGS);
static void fDIV_I32(CMDARGS);
static void fDIV_I64(CMDARGS);
static void fDIV_F32(CMDARGS);
static void fDIV_F64(CMDARGS);
static void fMOD_I8(CMDARGS);
static void fMOD_I16(CMDARGS);
static void fMOD_I32(CMDARGS);
static void fMOD_I64(CMDARGS);
static void fMOD_F32(CMDARGS);
static void fMOD_F64(CMDARGS);
static void fNEG_I8(CMDARGS);
static void fNEG_I16(CMDARGS);
static void fNEG_I32(CMDARGS);
static void fNEG_I64(CMDARGS);
static void fNEG_F32(CMDARGS);
static void fNEG_F64(CMDARGS);
static void fSHL_I8(CMDARGS);
static void fSHL_I16(CMDARGS);
static void fSHL_I32(CMDARGS);
static void fSHL_I64(CMDARGS);
static void fSHR_I8(CMDARGS);
static void fSHR_I16(CMDARGS);
static void fSHR_I32(CMDARGS);
static void fSHR_I64(CMDARGS);

static void fAND_X8(CMDARGS);
static void fAND_X16(CMDARGS);
static void fAND_X32(CMDARGS);
static void fAND_X64(CMDARGS);
static void fOR_X8(CMDARGS);
static void fOR_X16(CMDARGS);
static void fOR_X32(CMDARGS);
static void fOR_X64(CMDARGS);
static void fXOR_X8(CMDARGS);
static void fXOR_X16(CMDARGS);
static void fXOR_X32(CMDARGS);
static void fXOR_X64(CMDARGS);
static void fINV_X8(CMDARGS);
static void fINV_X16(CMDARGS);
static void fINV_X32(CMDARGS);
static void fINV_X64(CMDARGS);
static void fSHL_X8(CMDARGS);
static void fSHL_X16(CMDARGS);
static void fSHL_X32(CMDARGS);
static void fSHL_X64(CMDARGS);
static void fSHR_X8(CMDARGS);
static void fSHR_X16(CMDARGS);
static void fSHR_X32(CMDARGS);
static void fSHR_X64(CMDARGS);

#ifdef USE_VM_BLOCKCOMMANDS
static void fBCLR_X8(CMDARGS);
static void fBCLR_X16(CMDARGS);
static void fBCLR_X32(CMDARGS);
static void fBCLR_X64(CMDARGS);
static void fBMOVE_X8(CMDARGS);
static void fBMOVE_X16(CMDARGS);
static void fBMOVE_X32(CMDARGS);
static void fBMOVE_X64(CMDARGS);
static void fBADD_I8(CMDARGS);
static void fBADD_I16(CMDARGS);
static void fBADD_I32(CMDARGS);
static void fBADD_I64(CMDARGS);
static void fBADD_F32(CMDARGS);
static void fBADD_F64(CMDARGS);
static void fBSUB_I8(CMDARGS);
static void fBSUB_I16(CMDARGS);
static void fBSUB_I32(CMDARGS);
static void fBSUB_I64(CMDARGS);
static void fBSUB_F32(CMDARGS);
static void fBSUB_F64(CMDARGS);
static void fBMUL_I8(CMDARGS);
static void fBMUL_I16(CMDARGS);
static void fBMUL_I32(CMDARGS);
static void fBMUL_I64(CMDARGS);
static void fBMUL_F32(CMDARGS);
static void fBMUL_F64(CMDARGS);
static void fBDIV_I8(CMDARGS);
static void fBDIV_I16(CMDARGS);
static void fBDIV_I32(CMDARGS);
static void fBDIV_I64(CMDARGS);
static void fBDIV_F32(CMDARGS);
static void fBDIV_F64(CMDARGS);
static void fBMOD_I8(CMDARGS);
static void fBMOD_I16(CMDARGS);
static void fBMOD_I32(CMDARGS);
static void fBMOD_I64(CMDARGS);
static void fBMOD_F32(CMDARGS);
static void fBMOD_F64(CMDARGS);
static void fBNEG_I8(CMDARGS);
static void fBNEG_I16(CMDARGS);
static void fBNEG_I32(CMDARGS);
static void fBNEG_I64(CMDARGS);
static void fBNEG_F32(CMDARGS);
static void fBNEG_F64(CMDARGS);
static void fBSHL_I8(CMDARGS);
static void fBSHL_I16(CMDARGS);
static void fBSHL_I32(CMDARGS);
static void fBSHL_I64(CMDARGS);
static void fBSHR_I8(CMDARGS);
static void fBSHR_I16(CMDARGS);
static void fBSHR_I32(CMDARGS);
static void fBSHR_I64(CMDARGS);
static void fBAND_X8(CMDARGS);
static void fBAND_X16(CMDARGS);
static void fBAND_X32(CMDARGS);
static void fBAND_X64(CMDARGS);
static void fBOR_X8(CMDARGS);
static void fBOR_X16(CMDARGS);
static void fBOR_X32(CMDARGS);
static void fBOR_X64(CMDARGS);
static void fBXOR_X8(CMDARGS);
static void fBXOR_X16(CMDARGS);
static void fBXOR_X32(CMDARGS);
static void fBXOR_X64(CMDARGS);
static void fBINV_X8(CMDARGS);
static void fBINV_X16(CMDARGS);
static void fBINV_X32(CMDARGS);
static void fBINV_X64(CMDARGS);
static void fBSHL_X8(CMDARGS);
static void fBSHL_X16(CMDARGS);
static void fBSHL_X32(CMDARGS);
static void fBSHL_X64(CMDARGS);
static void fBSHR_X8(CMDARGS);
static void fBSHR_X16(CMDARGS);
static void fBSHR_X32(CMDARGS);
static void fBSHR_X64(CMDARGS);
#endif

#ifdef USE_VM_STDIO
static void fOUT_U8(CMDARGS);
static void fOUT_U16(CMDARGS);
static void fOUT_U32(CMDARGS);
static void fOUT_U64(CMDARGS);
static void fOUT_S8(CMDARGS);
static void fOUT_S16(CMDARGS);
static void fOUT_S32(CMDARGS);
static void fOUT_S64(CMDARGS);
static void fOUT_F32(CMDARGS);
static void fOUT_F64(CMDARGS);
static void fOUT_STR(CMDARGS);
static void fINP_U8(CMDARGS);
static void fINP_U16(CMDARGS);
static void fINP_U32(CMDARGS);
static void fINP_U64(CMDARGS);
static void fINP_S8(CMDARGS);
static void fINP_S16(CMDARGS);
static void fINP_S32(CMDARGS);
static void fINP_S64(CMDARGS);
static void fINP_F32(CMDARGS);
static void fINP_F64(CMDARGS);
#endif

